#BlueJ class context
comment0.params=vRegistration\ vType\ vCharge
comment0.target=Vehicle(java.lang.String,\ java.lang.String,\ float)
comment0.text=\r\n\ Constructor\ for\ Vehicle\r\n\ @param\ vRegistration\ The\ registration\ of\ the\ vehicle\r\n\ @param\ vType\ The\ type\ of\ the\ vehicle\ (Private\ or\ Commercial)\r\n\ @param\ vCharge\ The\ current\ charge\ associated\ with\ the\ vehicle\r\n
comment1.params=
comment1.target=java.lang.String\ getReg()
comment1.text=\r\n\ Returns\ the\ registration\ of\ the\ vehicle\r\n\ @return\ The\ registration\ of\ the\ vehicle\r\n
comment10.params=
comment10.target=java.lang.String\ getLastSensorTime()
comment10.text=\r\n\ Return\ the\ time\ the\ last\ sensor\ was\ crossed\ by\ the\ vehicle\r\n\ @return\ The\ time\ of\ the\ last\ sensor\ that\ was\ crossed\ by\ the\ vehicle\r\n
comment11.params=
comment11.target=int\ getTimePerSegment()
comment11.text=\r\n\ Return\ the\ the\ time\ the\ vehicle\ should\ take\ per\ segment\r\n\ @return\ The\ time\ the\ vehicle\ takes\ for\ each\ segment\r\n
comment12.params=
comment12.target=void\ setActive()
comment12.text=\r\n\ Switches\ whether\ the\ vehicle\ is\ active\ or\ not\ based\ on\ past\ value\r\n
comment13.params=increment
comment13.target=void\ setCharge(float)
comment13.text=\ \r\n\ Increments\ the\ charge\ by\ the\ provided\ value\r\n\ @increment\ float\ The\ value\ to\ increase\ the\ charge\ by\r\n
comment14.params=entryPoint\ entryTime
comment14.target=void\ setEntryPoint(Sensor,\ java.lang.String)
comment14.text=\r\n\ Sets\ the\ entry\ point\ for\ the\ vehicle,\ changing\ co-ordinates\ and\ the\ entry\ name\ and\ time\r\n\ @param\ entryPoint\ Sensor\ object\ for\ the\ entry\r\n\ @param\ entryTime\ The\ time\ at\ which\ the\ vehicle\ entered\ the\ network\r\n
comment15.params=destination
comment15.target=void\ enterNetwork(Sensor)
comment15.text=\r\n\ Sets\ the\ vehicle\ to\ enter\ the\ network\ and\ sets\ it\ to\ travel\ to\ the\ given\ destination\r\n\ @param\ destination\ The\ sensor\ object\ that\ the\ vehicle\ is\ travelling\ towards\r\n
comment16.params=time\ destination
comment16.target=java.lang.String\ drive(java.lang.String,\ Sensor)
comment16.text=\r\n\ Causes\ the\ vehicle\ to\ increment\ counters\ and\ travel\ through\ the\ network\r\n\ @param\ time\ The\ current\ time\ of\ the\ simulation\ (hh\:mm)\r\n\ @param\ destination\ The\ sensor\ which\ the\ vehicle\ is\ heading\ for\r\n\ @return\ The\ string\ representation\ of\ the\ sensor\ stamp\ (Details\ for\ crossing\ a\ sensor)\r\n
comment17.params=crossTime\ destination
comment17.target=java.lang.String\ crossSensor(java.lang.String,\ Sensor)
comment17.text=\r\n\ Allows\ the\ vehicle\ to\ cross\ a\ sensor\r\n\ @param\ crossTime\ The\ time\ at\ which\ the\ vehicle\ crossed\ the\ sensor\ (hh\:mm)\r\n\ @param\ destination\ The\ new\ destination\ for\ the\ vehicle\r\n\ @return\ The\ stamp\ of\ details\ for\ which\ the\ vehicle\ crossed\ the\ sensor\r\n
comment18.params=exitTime
comment18.target=void\ exitNetwork(java.lang.String)
comment18.text=\r\n\ Causes\ the\ vehicle\ to\ exit\ the\ network\r\n\ @param\ The\ time\ at\ which\ the\ vehicle\ exited\ the\ network\ (hh\:mm)\r\n
comment19.params=
comment19.target=java.lang.String\ getCurrentSegmentName()
comment19.text=\r\n\ Sorts\ the\ sensor\ names\ alphabetically\ and\ returns\ them,\ giving\ the\ segment\ name\r\n\ @return\ The\ current\ segment\ name\r\n
comment2.params=
comment2.target=java.lang.String\ getType()
comment2.text=\r\n\ Return\ the\ type\ of\ the\ vehicle\r\n\ @return\ The\ type\ of\ the\ vehicle\r\n
comment3.params=
comment3.target=float\ getCharge()
comment3.text=\r\n\ Return\ the\ current\ charge\ of\ the\ vehicle\r\n\ @return\ The\ current\ charge\ of\ the\ vehicle\r\n
comment4.params=
comment4.target=double\ getX()
comment4.text=\r\n\ Return\ the\ x\ co-ordinate\ of\ the\ vehicle\r\n\ @return\ The\ x\ co-ordinate\ of\ the\ vehicle\r\n
comment5.params=
comment5.target=double\ getY()
comment5.text=\r\n\ Return\ the\ y\ co-ordinate\ of\ the\ vehicle\r\n\ @return\ The\ y\ co-ordinate\ of\ the\ vehicle\r\n
comment6.params=
comment6.target=boolean\ getActive()
comment6.text=\r\n\ Return\ whether\ the\ vehicle\ is\ active\ or\ not\r\n\ @return\ Boolean\ for\ whether\ the\ vehicle\ is\ currently\ in\ the\ network\r\n
comment7.params=
comment7.target=boolean\ requireUpdate()
comment7.text=\r\n\ Return\ whether\ the\ vehicle\ requires\ it's\ charge\ to\ be\ updated\r\n\ @return\ Boolean\ for\ whether\ the\ vehicle\ has\ just\ crossed\ a\ sensor\r\n
comment8.params=
comment8.target=java.lang.String\ getLastSensor()
comment8.text=\r\n\ Return\ the\ last\ sensor\ crossed\ by\ the\ vehicle\r\n\ @return\ The\ name\ of\ the\ last\ sensor\ crossed\ by\ the\ vehicle\r\n
comment9.params=
comment9.target=java.lang.String\ getNextSensor()
comment9.text=\r\n\ Return\ the\ next\ sensor\ crossed\ by\ the\ vehicle\r\n\ @return\ The\ name\ of\ the\ next\ sensor\ crossed\ by\ the\ vehicle\r\n
numComments=20
